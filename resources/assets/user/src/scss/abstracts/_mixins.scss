@mixin bgGradient() {
    content: "";
    background: -moz-linear-gradient(
        top,
        rgba(0, 0, 0, 0) 0%,
        rgba(0, 0, 0, 0.6) 100%,
        rgba(0, 0, 0, 1) 100%
    ); /* FF3.6-15 */
    background: -webkit-linear-gradient(
        top,
        rgba(0, 0, 0, 0) 0%,
        rgba(0, 0, 0, 0.6) 100%,
        rgba(0, 0, 0, 1) 100%
    ); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 0) 0%,
        rgba(0, 0, 0, 0.6) 100%,
        rgba(0, 0, 0, 1) 100%
    ); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

/// div box
/// @param {Length} $height
/// @param {Length} $borderRadius
@mixin circleBox($height, $borderRadius) {
    height: $height;
    border-radius: $borderRadius;
}

/// cover image
@mixin imgObjectFitCover() {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/// shorthand mixin for offset positioning
/// @param {String} $position - either `relative`, `absolute` or `fixed`
/// @param {Length} $top
/// @param {Length} $right
/// @param {Length} $bottom
/// @param {Length} $left
/// @param {Length} $left
/// Ex: @include position(absolute, $left: 0, $bottom: 0);
@mixin position(
    $position,
    $top: null,
    $right: null,
    $bottom: null,
    $left: null,
    $zIndex: null
) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    z-index: $zIndex;
}

/// shorthand mixin for flexbox
/// @param {String} $direction - either `row`, `column`
/// @param {String} $justifyContent
/// @param {String} $alignItems
/// @param {String} $alignContent
/// @param {String} $wrap
/// @param {Number} $flex
@mixin flexbox(
    $flexDirection: row,
    $justifyContent: null,
    $alignItems: null,
    $alignContent: null,
    $wrap: null,
    $flex: null,
) {
    display: flex;
    flex-direction: $flexDirection;
    justify-content: $justifyContent;
    align-items: $alignItems;
    align-content: $alignContent;
    flex-wrap: $wrap;
    flex: $flex;
}

/// responsive, set max page width
@mixin maxPageWidth() {
    max-width: 425px;
}

/// replace long text by dots
/// @param {Length} $line
@mixin replaceLongText($line: 3) {
    display: -webkit-box;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
}

/// fixed bar and maxWidth
@mixin toolbar() {
    @include position(fixed, $left: 0, $right: 0, $bottom: 0, $zIndex: $zIndexNavbar);
    @include maxPageWidth();
    margin: 0 auto;
}
