user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    proxy_set_header X-Forwarded-For $remote_addr;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout  main;
    # access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;
    client_max_body_size 128M;

    gzip  on;

    #### Laravel Admin (port 80 or your domain)
    server {
        listen 80;
        server_name _;  # Replace with your actual domain
        root /var/www/admin/public;

        index index.php index.html;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
            gzip_static on;
        }

        ## All static files will be served directly.
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|eot|woff|woff2|ttf|svg)$ {
            access_log off;
            expires 365d;
            add_header Cache-Control "public, no-transform";

            ## No need to bleed constant updates. Send the all shebang in one
            ## fell swoop.
            tcp_nodelay off;

            ## Set the OS file cache.
            open_file_cache max=3000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;
        }

        location ~ \.php$ {
            ##  Prevents your website from being embedded in an <iframe>.
            add_header X-Frame-Options DENY always;

            ##  Stops browsers from trying to "guess" (sniff) the MIME type of content.
            add_header X-Content-Type-Options nosniff;

            try_files $uri =404;
            fastcgi_pass rodas_app:9000;  # Your PHP-FPM container
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
    }

    #### Vue.js End User App (port 8080 or another domain)
    server {
        listen 8080;
        server_name _;  # Replace with your actual domain
        root /var/www/html;

        gzip on;
        gzip_disable "msie6";
        gzip_comp_level 9;
        gzip_min_length 1100;
        gzip_buffers 16 8k;
        gzip_proxied any;
        gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/json application/xml application/rss+xml image/svg+xml font/woff2 application/font-woff2;

        location @index {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff;
            add_header Pragma no-cache;
            expires 0;
            try_files /index.html =404;
        }

        location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|xml|otf|ttf|eot|woff|woff2|svg)$ {
            access_log off;
            add_header Cache-Control "public, max-age=63072000";
            add_header X-Content-Type-Options nosniff;
            tcp_nodelay off;
            open_file_cache max=3000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;
        }

        location / {
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff;
            try_files $uri $uri/ @index;
        }
    }
}
